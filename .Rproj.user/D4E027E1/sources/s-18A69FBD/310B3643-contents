library(data.table)
library(ggplot2)
library(psych)
library(readxl)
library(grDevices)
library(dplyr)
library(broom)
library(ggpubr)
library(tidyverse)
library(knitr)

#Personal access token
#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

Sorption <- read_excel("/Users/katinkakrahn/Library/Mobile Documents/com~apple~CloudDocs/Documents/Skole/VOW/Lab/160222_sorption_rawdata.xlsx")
as.data.table(Sorption)
Sorption <- as.data.table(Sorption)

#Convert 1 and 0 to TRUE and FALSE and delete integer columns
Sorption$SoilLogic <- as.logical(Sorption$Soil_binary)
Sorption$mixLogic <- as.logical(Sorption$mix_binary)
Sorption <- subset(Sorption,select = -c(Soil_binary,mix_binary))
Sorption_BC <- kable(Sorption, "latex", booktabs = TRUE, digits = 2)

# Subset biochar and cocktail/single compound
Sorption <- na.omit(Sorption)
Sorption_C1omit <- filter(Sorption_NAomit, between(Conc_point, 2, 10))
Sorption_BCsingleComp_all <- subset(Sorption_NAomit, mixLogic == FALSE)
Sorption_BCsingleComp_C1omit <- subset(Sorption_C1omit, mixLogic == FALSE)
Sorption_BCmixComp <- subset(Sorption_NAomit, mixLogic == TRUE)

Sorption <- factor(Sorption, levels = c("PFPeA", "PFHxA", "PFHpA", 
                                        "PFOA", "PFNA", "PFDA"))

nr_compounds <- length(unique(Sorption$Compound))
nr_observations <- nrow(Sorption)
compounds <- unique(Sorption$Compound)

summary_stats_Sorption <- data.table(K_F = rep(0, nr_observations), 
                                           K_F_std_error = rep(0, nr_observations),
                                           K_F_t_value = rep (0, nr_observations),
                                           K_F_p_value_t = rep(0, nr_observations),
                                           n = rep(0, nr_observations),
                                           n_std_error = rep(0, nr_observations),
                                           n_t_value = rep(0, nr_observations),
                                           n_F_p_value_t = rep(0, nr_observations),
                                           r_squared = rep(0, nr_observations),
                                           r_squared_adj = rep(0, nr_observations),
                                           residual_std_error = rep(0, nr_observations),
                                           F_statistic = rep(0, nr_observations),
                                           p_value = rep(0, nr_observations),
                                           nr_points = rep("all", nr_observations),
                                           compound = compounds)

for(i in 1:nr_observations){
  fit <- lm(log_Cs ~ log_Cw, data = Sorption[Compound == compounds[i]])
  #print(summary(fit))
  #print(compounds[i])
  summary_stats_CWC_single_all[compound == compounds[i], K_F := fit$coefficients[1]]
  summary_stats_CWC_single_all[compound == compounds[i], K_F_std_error := summary(fit)$coefficients[1,2]]
  summary_stats_CWC_single_all[compound == compounds[i], K_F_t_value := summary(fit)$coefficients[1,3]]
  summary_stats_CWC_single_all[compound == compounds[i], K_F_p_value_t := summary(fit)$coefficients[1,4]]
  summary_stats_CWC_single_all[compound == compounds[i], n := fit$coefficients[2]]
  summary_stats_CWC_single_all[compound == compounds[i], n_std_error := summary(fit)$coefficients[2,2]]
  summary_stats_CWC_single_all[compound == compounds[i], n_t_value := summary(fit)$coefficients[2,3]]
  summary_stats_CWC_single_all[compound == compounds[i], n_F_p_value_t := summary(fit)$coefficients[2,4]]
  summary_stats_CWC_single_all[compound == compounds[i], r_squared := summary(fit)$r.squared]
  summary_stats_CWC_single_all[compound == compounds[i], r_squared_adj := summary(fit)$adj.r.squared]
  summary_stats_CWC_single_all[compound == compounds[i], residual_std_error := summary(fit)$sigma]
  summary_stats_CWC_single_all[compound == compounds[i], F_statistic := summary(fit)$fstatistic[1]]
  summary_stats_CWC_single_all[compound == compounds[i], p_value := pf(summary(fit)$fstatistic[1],summary(fit)$fstatistic[2],
                                                                       summary(fit)$fstatistic[3],lower.tail=F)]
}
summary_stats_CWC_single_all